{"remainingRequest":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\src\\components\\Excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\src\\components\\Excel.vue","mtime":1555572475550},{"path":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files\\workspace\\Web前端路线\\VUE\\integration-vue3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport _Object$keys from \"D:\\\\Program Files\\\\workspace\\\\Web\\u524D\\u7AEF\\u8DEF\\u7EBF\\\\VUE\\\\integration-vue3.0\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _Object$assign from \"D:\\\\Program Files\\\\workspace\\\\Web\\u524D\\u7AEF\\u8DEF\\u7EBF\\\\VUE\\\\integration-vue3.0\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/web.dom.iterable\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入xlsx\nvar XLSX = require('xlsx');\n\nexport default {\n  name: 'Index',\n  data: function data() {\n    return {\n      fullscreenLoading: false,\n      // 加载中\n      imFile: '',\n      // 导入文件el\n      outFile: '',\n      // 导出文件el\n      errorDialog: false,\n      // 错误信息弹窗\n      errorMsg: '',\n      // 错误信息内容\n      excelData: [// 测试数据\n      {\n        id: 1,\n        name: '红烧鱼',\n        size: '大',\n        taste: '微辣',\n        price: '40',\n        remain: '100'\n      }, {\n        id: 2,\n        name: '红烧鱼',\n        size: '大',\n        taste: '微辣',\n        price: '40',\n        remain: '100'\n      }, {\n        id: 3,\n        name: '红烧鱼',\n        size: '大',\n        taste: '微辣',\n        price: '40',\n        remain: '100'\n      }, {\n        id: 4,\n        name: '红烧鱼',\n        size: '大',\n        taste: '微辣',\n        price: '40',\n        remain: '100'\n      }, {\n        id: 5,\n        name: '红烧鱼',\n        size: '大',\n        taste: '微辣',\n        price: '40',\n        remain: '100'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.imFile = document.getElementById('imFile');\n    this.outFile = document.getElementById('downlink');\n  },\n  methods: {\n    uploadFile: function uploadFile() {\n      // 点击导入按钮\n      this.imFile.click();\n    },\n    downloadFile: function downloadFile(rs) {\n      // 点击导出按钮\n      var data = [{}];\n\n      for (var k in rs[0]) {\n        data[0][k] = k;\n      }\n\n      data = data.concat(rs);\n      this.downloadExl(data, '菜单');\n    },\n    importFile: function importFile() {\n      // 导入excel\n      this.fullscreenLoading = true;\n      var obj = this.imFile;\n\n      if (!obj.files) {\n        this.fullscreenLoading = false;\n        return;\n      }\n\n      var f = obj.files[0];\n      var reader = new FileReader();\n      var $t = this;\n\n      reader.onload = function (e) {\n        var data = e.target.result;\n\n        if ($t.rABS) {\n          $t.wb = XLSX.read(btoa(this.fixdata(data)), {\n            // 手动转化\n            type: 'base64'\n          });\n        } else {\n          $t.wb = XLSX.read(data, {\n            type: 'binary'\n          });\n        }\n\n        var json = XLSX.utils.sheet_to_json($t.wb.Sheets[$t.wb.SheetNames[0]]);\n        $t.dealFile($t.analyzeData(json)); // analyzeData: 解析导入数据\n      };\n\n      if (this.rABS) {\n        reader.readAsArrayBuffer(f);\n      } else {\n        reader.readAsBinaryString(f);\n      }\n    },\n    downloadExl: function downloadExl(json, downName, type) {\n      var _this = this;\n\n      // 导出到excel\n      var keyMap = []; // 获取键\n\n      for (var k in json[0]) {\n        keyMap.push(k);\n      }\n\n      var tmpdata = []; // 用来保存转换好的json\n\n      json.map(function (v, i) {\n        return keyMap.map(function (k, j) {\n          return _Object$assign({}, {\n            v: v[k],\n            position: (j > 25 ? _this.getCharCol(j) : String.fromCharCode(65 + j)) + (i + 1)\n          });\n        });\n      }).reduce(function (prev, next) {\n        return prev.concat(next);\n      }).forEach(function (v) {\n        tmpdata[v.position] = {\n          v: v.v\n        };\n      });\n\n      var outputPos = _Object$keys(tmpdata); // 设置区域,比如表格从A1到D10\n\n\n      var tmpWB = {\n        SheetNames: ['mySheet'],\n        // 保存的表标题\n        Sheets: {\n          'mySheet': _Object$assign({}, tmpdata, // 内容\n          {\n            '!ref': outputPos[0] + ':' + outputPos[outputPos.length - 1] // 设置填充区域\n\n          })\n        }\n      };\n      var tmpDown = new Blob([this.s2ab(XLSX.write(tmpWB, {\n        bookType: type === undefined ? 'xlsx' : type,\n        bookSST: false,\n        type: 'binary' // 这里的数据是用来定义导出的格式类型\n\n      }))], {\n        type: ''\n      }); // 创建二进制对象写入转换好的字节流\n\n      var href = URL.createObjectURL(tmpDown); // 创建对象超链接\n\n      this.outFile.download = downName + '.xlsx'; // 下载名称\n\n      this.outFile.href = href; // 绑定a标签\n\n      this.outFile.click(); // 模拟点击实现下载\n\n      setTimeout(function () {\n        // 延时释放\n        URL.revokeObjectURL(tmpDown); // 用URL.revokeObjectURL()来释放这个object URL\n      }, 100);\n    },\n    analyzeData: function analyzeData(data) {\n      // 此处可以解析导入数据\n      return data;\n    },\n    dealFile: function dealFile(data) {\n      // 处理导入的数据\n      this.imFile.value = '';\n      this.fullscreenLoading = false;\n\n      if (data.length <= 0) {\n        this.errorDialog = true;\n        this.errorMsg = '请导入正确信息';\n      } else {\n        this.excelData = data;\n        console.log(this.excelData);\n      }\n    },\n    s2ab: function s2ab(s) {\n      // 字符串转字符流\n      var buf = new ArrayBuffer(s.length);\n      var view = new Uint8Array(buf);\n\n      for (var i = 0; i !== s.length; ++i) {\n        view[i] = s.charCodeAt(i) & 0xFF;\n      }\n\n      return buf;\n    },\n    getCharCol: function getCharCol(n) {\n      // 将指定的自然数转换为26进制表示。映射关系：[0-25] -> [A-Z]。\n      var s = '';\n      var m = 0;\n\n      while (n > 0) {\n        m = n % 26 + 1;\n        s = String.fromCharCode(m + 64) + s;\n        n = (n - m) / 26;\n      }\n\n      return s;\n    },\n    fixdata: function fixdata(data) {\n      // 文件流转BinaryString\n      var o = '';\n      var l = 0;\n      var w = 10240;\n\n      for (; l < data.byteLength / w; ++l) {\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\n      }\n\n      o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n      return o;\n    }\n  }\n};",{"version":3,"sources":["Excel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"index\" v-loading.fullscreen.lock=\"fullscreenLoading\" element-loading-text=\"拼命加载中...\">\r\n    <input type=\"file\" @change=\"importFile(this)\" id=\"imFile\" style=\"display: none\"\r\n      accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" />\r\n    <a id=\"downlink\"></a>\r\n    <el-button class=\"button\" @click=\"uploadFile()\">导入</el-button>\r\n    <el-button class=\"button\" @click=\"downloadFile(excelData)\">导出</el-button>\r\n    <!--错误信息提示-->\r\n    <el-dialog title=\"提示\" v-model=\"errorDialog\" size=\"tiny\">\r\n      <span>{{errorMsg}}</span>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"errorDialog=false\">确认</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!--展示导入信息-->\r\n\r\n    <el-table :data=\"excelData\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"编号\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"菜品名称\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"size\" label=\"大小\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"taste\" label=\"辣的级别\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"price\" label=\"价格\" width=\"300\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"remain\" label=\"库存\" width=\"300\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"success\" size=\"small\" >详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // 引入xlsx\r\n  var XLSX = require('xlsx')\r\n  export default {\r\n    name: 'Index',\r\n    data() {\r\n      return {\r\n        fullscreenLoading: false, // 加载中\r\n        imFile: '', // 导入文件el\r\n        outFile: '',  // 导出文件el\r\n        errorDialog: false, // 错误信息弹窗\r\n        errorMsg: '', // 错误信息内容\r\n        excelData: [  // 测试数据\r\n          {\r\n           id:1,name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'\r\n          },\r\n          {\r\n           id:2,name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'\r\n          },\r\n          {\r\n           id:3,name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'\r\n          },\r\n          {\r\n           id:4,name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'\r\n          },\r\n          {\r\n           id:5,name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'\r\n          }\r\n\r\n        ]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.imFile = document.getElementById('imFile')\r\n      this.outFile = document.getElementById('downlink')\r\n    },\r\n    methods: {\r\n      uploadFile: function () { // 点击导入按钮\r\n        this.imFile.click()\r\n      },\r\n      downloadFile: function (rs) { // 点击导出按钮\r\n        let data = [{}]\r\n        for (let k in rs[0]) {\r\n          data[0][k] = k\r\n        }\r\n        data = data.concat(rs)\r\n        this.downloadExl(data, '菜单');\r\n      },\r\n      importFile: function () { // 导入excel\r\n        this.fullscreenLoading = true\r\n        let obj = this.imFile\r\n        if (!obj.files) {\r\n          this.fullscreenLoading = false\r\n          return\r\n        }\r\n        var f = obj.files[0]\r\n        var reader = new FileReader()\r\n        let $t = this\r\n        reader.onload = function (e) {\r\n          var data = e.target.result\r\n          if ($t.rABS) {\r\n            $t.wb = XLSX.read(btoa(this.fixdata(data)), {  // 手动转化\r\n              type: 'base64'\r\n            })\r\n          } else {\r\n            $t.wb = XLSX.read(data, {\r\n              type: 'binary'\r\n            })\r\n          }\r\n          let json = XLSX.utils.sheet_to_json($t.wb.Sheets[$t.wb.SheetNames[0]])\r\n          $t.dealFile($t.analyzeData(json)) // analyzeData: 解析导入数据\r\n        }\r\n        if (this.rABS) {\r\n          reader.readAsArrayBuffer(f)\r\n        } else {\r\n          reader.readAsBinaryString(f)\r\n        }\r\n      },\r\n      downloadExl: function (json, downName, type) {  // 导出到excel\r\n        let keyMap = [] // 获取键\r\n        for (let k in json[0]) {\r\n          keyMap.push(k)\r\n        }\r\n        let tmpdata = [] // 用来保存转换好的json\r\n        json.map((v, i) => keyMap.map((k, j) => Object.assign({}, {\r\n          v: v[k],\r\n          position: (j > 25 ? this.getCharCol(j) : String.fromCharCode(65 + j)) + (i + 1)\r\n        }))).reduce((prev, next) => prev.concat(next)).forEach(function (v) {\r\n          tmpdata[v.position] = {\r\n            v: v.v\r\n          }\r\n        })\r\n        let outputPos = Object.keys(tmpdata)  // 设置区域,比如表格从A1到D10\r\n        let tmpWB = {\r\n          SheetNames: ['mySheet'], // 保存的表标题\r\n          Sheets: {\r\n            'mySheet': Object.assign({},\r\n              tmpdata, // 内容\r\n              {\r\n                '!ref': outputPos[0] + ':' + outputPos[outputPos.length - 1] // 设置填充区域\r\n              })\r\n          }\r\n        }\r\n        let tmpDown = new Blob([this.s2ab(XLSX.write(tmpWB,\r\n          { bookType: (type === undefined ? 'xlsx' : type), bookSST: false, type: 'binary' } // 这里的数据是用来定义导出的格式类型\r\n        ))], {\r\n            type: ''\r\n          })  // 创建二进制对象写入转换好的字节流\r\n        var href = URL.createObjectURL(tmpDown)  // 创建对象超链接\r\n        this.outFile.download = downName + '.xlsx'  // 下载名称\r\n        this.outFile.href = href  // 绑定a标签\r\n        this.outFile.click()  // 模拟点击实现下载\r\n        setTimeout(function () {  // 延时释放\r\n          URL.revokeObjectURL(tmpDown) // 用URL.revokeObjectURL()来释放这个object URL\r\n        }, 100)\r\n      },\r\n      analyzeData: function (data) {  // 此处可以解析导入数据\r\n        return data\r\n      },\r\n      dealFile: function (data) {   // 处理导入的数据\r\n        this.imFile.value = ''\r\n        this.fullscreenLoading = false\r\n        if (data.length <= 0) {\r\n          this.errorDialog = true\r\n          this.errorMsg = '请导入正确信息'\r\n        } else {\r\n          this.excelData = data\r\n          console.log(this.excelData);\r\n        }\r\n      },\r\n      s2ab: function (s) { // 字符串转字符流\r\n        var buf = new ArrayBuffer(s.length)\r\n        var view = new Uint8Array(buf)\r\n        for (var i = 0; i !== s.length; ++i) {\r\n          view[i] = s.charCodeAt(i) & 0xFF\r\n        }\r\n        return buf\r\n      },\r\n      getCharCol: function (n) { // 将指定的自然数转换为26进制表示。映射关系：[0-25] -> [A-Z]。\r\n        let s = ''\r\n        let m = 0\r\n        while (n > 0) {\r\n          m = n % 26 + 1\r\n          s = String.fromCharCode(m + 64) + s\r\n          n = (n - m) / 26\r\n        }\r\n        return s\r\n      },\r\n      fixdata: function (data) {  // 文件流转BinaryString\r\n        var o = ''\r\n        var l = 0\r\n        var w = 10240\r\n        for (; l < data.byteLength / w; ++l) {\r\n          o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)))\r\n        }\r\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)))\r\n        return o\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components"}]}